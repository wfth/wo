<%= for {id, data, file_type} <- @fields do %>
<form enctype="multipart/form-data">
  <div>
    <label class="button">
      <input id="<%= id %>" type="file" accept="<%= file_type %>/*" style="display:none" onchange="$('#<%= id %>_file_button_text').html($(this).val().replace('C:\\fakepath\\', ''));">
      <%= if data do %>
        <span id="<%= id %>_file_button_text"><%= List.last(String.split(data, "/")) %></span>
      <% else %>
        <span id="<%= id %>_file_button_text">Choose a <%= id %> file...</span>
      <% end %>
    </label>
  </div>
</form>

<div id="<%= id %>_progress_bar" class="progress" role="progressbar" tabindex="0" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
  <div id="<%= id %>_progress_meter" class="progress-meter"></div>
</div>
<% end %>

<button type="button" class="button success">Submit</button>

<script type="text/javascript">
  AWS.config = new AWS.Config({
    region: 'us-east-1',
    accessKeyId: '<%= System.get_env("WFTH_PERMISSIONS_AWS_ACCESS_KEY") %>',
    secretAccessKey: '<%= System.get_env("WFTH_PERMISSIONS_AWS_ACCESS_SECRET") %>'
  });

  function createManagedUpload(file, progressMeterId) {
    var upload = new AWS.S3.ManagedUpload({
      params: {
        Bucket: 'wisdomonline-development',
        Key: "sermon_series/" + "<%= @data.uuid %>" + "/" + file.name,
        Body: file,
        ContentType: file.type,
        ACL: 'public-read'
      }});

    upload.on('httpUploadProgress', function (progress) {
      $('#' + progressMeterId).attr('style', 'width: ' + Math.round((progress.loaded / progress.total)*100) + '%');
    });

    return upload;
  }

  function deleteExistingFile(kind) {
    var bucket = new AWS.S3();
    var key = null;
    <%= for {id, data, _} <- @fields do %>
    if (kind == "<%= id %>") {
      key = "<%= key_from_url(data) %>";
    }
    <% end %>

    if (key != "") {
      bucket.deleteObject({Bucket: 'wisdomonline-development', Key: key}, function(err, data) {});
    }
  }

  function uploadFile(kind) {
    var deferred = $.Deferred();
    var fileInput = document.getElementById(kind);
    if (fileInput.files.length == 0) {
      deferred.resolve();
    } else {
      deleteExistingFile(kind);
      var managedUpload = createManagedUpload(fileInput.files[0], kind + "_progress_meter");
      managedUpload.send(function(err, data) {
        $("#<%= @model %>_" + kind + "_url").val(data.Location);
        deferred.resolve();
      });
    }
    return deferred.promise();
  }

  $(':button').on('click', function() {
    var promises = [];
    <%= for {id, _, _} <- @fields do %>
    var promise<%= id %> = uploadFile('<%= id %>');
    promises.push(promise<%= id %>);
    <% end %>

    $.when.apply($, promises).done(function() {
      $('#new_<%= @model %>').submit();
    });
  });
</script>

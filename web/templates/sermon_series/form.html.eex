<%= form_for @changeset, @action, [id: "new_sermon_series"], fn f -> %>
  <%= if @changeset.action do %>
    <div class="callout warning">
      <p>Oops, something went wrong! Please check the errors below.</p>
    </div>
  <% end %>

  <div class="row">
    <div class="large-6 columns">
      <div class="clearfix">
        <div class="float-left"><%= label f, :title %></div>
        <div class="float-right"><%= error_tag f, :title %></div>
      </div>
      <%= text_input f, :title %>
    </div>

    <div class="large-6 columns">
      <div class="clearfix">
        <div class="float-left"><%= label f, :passages %></div>
        <div class="float-right"><%= error_tag f, :passages %></div>
      </div>
      <%= text_input f, :passages %>
    </div>
  </div>

  <div>
    <div class="clearfix">
      <div class="float-left"><%= label f, :description %></div>
      <div class="float-right"><%= error_tag f, :description %></div>
    </div>
    <%= textarea f, :description, style: "resize:vertical" %>
  </div>

  <div class="row">
    <div class="large-6 columns">
      <div class="clearfix">
        <div class="float-left"><%= label f, :released_on_string %></div>
        <div class="float-right"><%= error_tag f, :released_on_string %></div>
      </div>
      <%= text_input f, :released_on_string %>
    </div>

    <div class="large-6 columns">
      <div class="clearfix">
        <div class="float-left"><%= label f, :price %></div>
        <div class="float-right"><%= error_tag f, :price %></div>
      </div>
      <%= number_input f, :price, step: "any" %>
    </div>
  </div>

  <%= hidden_input f, :graphic_url %>
  <%= hidden_input f, :buy_graphic_url %>
<% end %>

<form enctype="multipart/form-data">
  <div>
    <label class="button">
      <input id="graphic" type="file" accept="image/*" style="display:none" onchange="$('#graphic_file_button_text').html($(this).val().replace('C:\\fakepath\\', ''));">
      <%= if @sermon_series.graphic_url do %>
        <span id="graphic_file_button_text"><%= List.last(String.split(@sermon_series.graphic_url, "/")) %></span>
      <% else %>
        <span id="graphic_file_button_text">Choose a graphic file...</span>
      <% end %>
    </label>
  </div>
</form>

<div id="graphic_progress_bar" class="progress" role="progressbar" tabindex="0" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
  <div id="graphic_progress_meter" class="progress-meter"></div>
</div>

<form enctype="multipart/form-data">
  <div>
    <label class="button">
      <input id="buy_graphic" type="file" accept="image/*" style="display:none" onchange="$('#buy_graphic_file_button_text').html($(this).val().replace('C:\\fakepath\\', ''));">
      <%= if @sermon_series.buy_graphic_url do %>
        <span id="buy_graphic_file_button_text"><%= List.last(String.split(@sermon_series.buy_graphic_url, "/")) %></span>
      <% else %>
        <span id="buy_graphic_file_button_text">Choose a buy graphic file...</span>
      <% end %>
    </label>
  </div>
</form>

<div id="buy_graphic_progress_bar" class="progress" role="progressbar" tabindex="0" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
  <div id="buy_graphic_progress_meter" class="progress-meter"></div>
</div>

<button type="button" class="button success">Submit</button>

<script type="text/javascript">
  var sermonSeriesUuid = uuid();

  AWS.config = new AWS.Config({
    region: 'us-east-1',
    accessKeyId: '<%= System.get_env("WFTH_PERMISSIONS_AWS_ACCESS_KEY") %>',
    secretAccessKey: '<%= System.get_env("WFTH_PERMISSIONS_AWS_ACCESS_SECRET") %>'
  });

  // Stolen from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript.
  // Has a 1 in 1,000,000 chance of collision.
  function uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
      return v.toString(16);
    });
  }

  function createManagedUpload(file, progressMeterId) {
    var upload = new AWS.S3.ManagedUpload({
      params: {
        Bucket: 'wisdomonline-development',
        Key: "sermon_series/" + sermonSeriesUuid + "/" + file.name,
        Body: file,
        ContentType: file.type,
        ACL: 'public-read'
      }});

    upload.on('httpUploadProgress', function (progress) {
      $('#' + progressMeterId).attr('style', 'width: ' + Math.round((progress.loaded / progress.total)*100) + '%');
    });

    return upload;
  }

  // kind in {graphic, buy_graphic}
  function uploadFile(kind) {
    var deferred = $.Deferred();
    var fileInput = document.getElementById(kind);
    if (fileInput.files.length == 0) {
      deferred.resolve();
    } else {
      var managedUpload = createManagedUpload(fileInput.files[0], kind + "_progress_meter");
      managedUpload.send(function(err, data) {
        $("#sermon_series_" + kind + "_url").val(data.Location);
        deferred.resolve();
      });
    }
    return deferred.promise();
  }
  
  $(':button').on('click', function() {
    var graphicPromise = uploadFile('graphic');
    var buyGraphicPromise = uploadFile('buy_graphic');
    $.when(graphicPromise, buyGraphicPromise).done(function() {
      $('#new_sermon_series').submit();
    });
  });
</script>
